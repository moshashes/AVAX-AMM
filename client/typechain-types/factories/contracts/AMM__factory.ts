/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { AMM, AMMInterface } from "../../contracts/AMM";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_tokenX",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_tokenY",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "PRECISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_inToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amountIn",
        type: "uint256",
      },
    ],
    name: "getEquivalentToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_outToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amountOut",
        type: "uint256",
      },
    ],
    name: "getSwapEstimateIn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_inToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amountIn",
        type: "uint256",
      },
    ],
    name: "getSwapEstimateOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_share",
        type: "uint256",
      },
    ],
    name: "getWithdrawEstimate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_tokenX",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amountX",
        type: "uint256",
      },
      {
        internalType: "contract IERC20",
        name: "_tokenY",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amountY",
        type: "uint256",
      },
    ],
    name: "provide",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "share",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_inToken",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_outToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amountIn",
        type: "uint256",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    name: "totalAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalShare",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_share",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620025233803806200252383398181016040528101906200003791906200013e565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000185565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000f282620000c5565b9050919050565b60006200010682620000e5565b9050919050565b6200011881620000f9565b81146200012457600080fd5b50565b60008151905062000138816200010d565b92915050565b60008060408385031215620001585762000157620000c0565b5b6000620001688582860162000127565b92505060206200017b8582860162000127565b9150509250929050565b61238e80620001956000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806387b292f91161007157806387b292f91461018d578063a37230ae146101bd578063aaf5eb68146101ed578063bfa7d42f1461020b578063d72b9da21461023b578063df791e501461026b576100a9565b8063026c4207146100ae5780631877bb5c146100cc5780632e1a7d4d146100fc5780633279081a1461012d57806349b81b101461015d575b600080fd5b6100b661029b565b6040516100c391906119fe565b60405180910390f35b6100e660048036038101906100e19190611a7c565b6102a1565b6040516100f391906119fe565b60405180910390f35b61011660048036038101906101119190611ad5565b6102b9565b604051610124929190611b02565b60405180910390f35b61014760048036038101906101429190611b69565b6106cf565b60405161015491906119fe565b60405180910390f35b61017760048036038101906101729190611bd0565b610c3d565b60405161018491906119fe565b60405180910390f35b6101a760048036038101906101a29190611bd0565b610ece565b6040516101b491906119fe565b60405180910390f35b6101d760048036038101906101d29190611bd0565b6110a1565b6040516101e491906119fe565b60405180910390f35b6101f561127a565b60405161020291906119fe565b60405180910390f35b61022560048036038101906102209190611bd0565b611281565b60405161023291906119fe565b60405180910390f35b61025560048036038101906102509190611c10565b611497565b60405161026291906119fe565b60405180910390f35b61028560048036038101906102809190611c3d565b6114af565b60405161029291906119fe565b60405180910390f35b60025481565b60036020528060005260406000206000915090505481565b600080600060025411610301576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f890611ced565b60405180910390fd5b60008311610344576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033b90611d59565b60405180910390fd5b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548311156103c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bd90611dc5565b60405180910390fd5b60006103f260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685610ece565b90506000610422600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1686610ece565b905084600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104739190611e14565b92505081905550846002600082825461048c9190611e14565b9250508190555081600460008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105039190611e14565b925050819055508060046000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461057b9190611e14565b9250508190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b81526004016105dd929190611e57565b6020604051808303816000875af11580156105fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106209190611eb8565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161067e929190611e57565b6020604051808303816000875af115801561069d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c19190611eb8565b508181935093505050915091565b6000848360008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16148061077a5750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b6107b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b090611f31565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610827576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081e90611f9d565b60405180910390fd5b6000861161086a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086190612009565b60405180910390fd5b600084116108ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a490612009565b60405180910390fd5b600080600254036108cf57620f424060646108c89190612029565b90506109cf565b6000600460008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548860025461091f9190612029565b610929919061209a565b90506000600460008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548760025461097b9190612029565b610985919061209a565b90508082146109c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c09061213d565b60405180910390fd5b81925050505b60008111610a12576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a09906121cf565b60405180910390fd5b8773ffffffffffffffffffffffffffffffffffffffff166323b872dd33308a6040518463ffffffff1660e01b8152600401610a4f939291906121ef565b6020604051808303816000875af1158015610a6e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a929190611eb8565b508573ffffffffffffffffffffffffffffffffffffffff166323b872dd3330886040518463ffffffff1660e01b8152600401610ad0939291906121ef565b6020604051808303816000875af1158015610aef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b139190611eb8565b5086600460008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b639190612226565b9250508190555084600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610bb99190612226565b925050819055508060026000828254610bd29190612226565b9250508190555080600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c289190612226565b92505081905550809350505050949350505050565b60008060025411610c83576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7a90611ced565b60405180910390fd5b8260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161480610d2b5750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b610d6a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d6190611f31565b60405180910390fd5b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548310610deb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610de2906122a6565b60405180910390fd5b6000610df685611855565b9050600084600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546103e8610e489190612029565b610e529190612029565b9050600085600460008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ea19190611e14565b6103e5610eae9190612029565b905060008183610ebe919061209a565b9050809550505050505092915050565b60008060025411610f14576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f0b90611ced565b60405180910390fd5b8260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161480610fbc5750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b610ffb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ff290611f31565b60405180910390fd5b600254831115611040576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161103790612338565b60405180910390fd5b600254600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548461108e9190612029565b611098919061209a565b91505092915050565b600080600254116110e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110de90611ced565b60405180910390fd5b8260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16148061118f5750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b6111ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111c590611f31565b60405180910390fd5b60006111d985611855565b9050600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205484600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112669190612029565b611270919061209a565b9250505092915050565b620f424081565b600080600254116112c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112be90611ced565b60405180910390fd5b8260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16148061136f5750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b6113ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113a590611f31565b60405180910390fd5b60006113b985611855565b905060006103e5856113cb9190612029565b90506000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548261141a9190612029565b90506000826103e8600460008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461146c9190612029565b6114769190612226565b905060008183611486919061209a565b905080965050505050505092915050565b60046020528060005260406000206000915090505481565b600080600254116114f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114ec90611ced565b60405180910390fd5b838360008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16148061159e5750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b6115dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115d490611f31565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361164b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161164290611f9d565b60405180910390fd5b6000841161168e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161168590612009565b60405180910390fd5b600061169a8786611281565b90508673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330886040518463ffffffff1660e01b81526004016116d9939291906121ef565b6020604051808303816000875af11580156116f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061171c9190611eb8565b5084600460008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461176c9190612226565b9250508190555080600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546117c29190611e14565b925050819055508573ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401611804929190611e57565b6020604051808303816000875af1158015611823573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118479190611eb8565b508093505050509392505050565b60008160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614806118ff5750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b61193e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161193590611f31565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036119bb57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691506119df565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505b50919050565b6000819050919050565b6119f8816119e5565b82525050565b6000602082019050611a1360008301846119ef565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611a4982611a1e565b9050919050565b611a5981611a3e565b8114611a6457600080fd5b50565b600081359050611a7681611a50565b92915050565b600060208284031215611a9257611a91611a19565b5b6000611aa084828501611a67565b91505092915050565b611ab2816119e5565b8114611abd57600080fd5b50565b600081359050611acf81611aa9565b92915050565b600060208284031215611aeb57611aea611a19565b5b6000611af984828501611ac0565b91505092915050565b6000604082019050611b1760008301856119ef565b611b2460208301846119ef565b9392505050565b6000611b3682611a3e565b9050919050565b611b4681611b2b565b8114611b5157600080fd5b50565b600081359050611b6381611b3d565b92915050565b60008060008060808587031215611b8357611b82611a19565b5b6000611b9187828801611b54565b9450506020611ba287828801611ac0565b9350506040611bb387828801611b54565b9250506060611bc487828801611ac0565b91505092959194509250565b60008060408385031215611be757611be6611a19565b5b6000611bf585828601611b54565b9250506020611c0685828601611ac0565b9150509250929050565b600060208284031215611c2657611c25611a19565b5b6000611c3484828501611b54565b91505092915050565b600080600060608486031215611c5657611c55611a19565b5b6000611c6486828701611b54565b9350506020611c7586828701611b54565b9250506040611c8686828701611ac0565b9150509250925092565b600082825260208201905092915050565b7f5a65726f204c6971756964697479000000000000000000000000000000000000600082015250565b6000611cd7600e83611c90565b9150611ce282611ca1565b602082019050919050565b60006020820190508181036000830152611d0681611cca565b9050919050565b7f73686172652063616e6e6f74206265207a65726f210000000000000000000000600082015250565b6000611d43601583611c90565b9150611d4e82611d0d565b602082019050919050565b60006020820190508181036000830152611d7281611d36565b9050919050565b7f496e73756666696369656e742073686172650000000000000000000000000000600082015250565b6000611daf601283611c90565b9150611dba82611d79565b602082019050919050565b60006020820190508181036000830152611dde81611da2565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611e1f826119e5565b9150611e2a836119e5565b9250828203905081811115611e4257611e41611de5565b5b92915050565b611e5181611a3e565b82525050565b6000604082019050611e6c6000830185611e48565b611e7960208301846119ef565b9392505050565b60008115159050919050565b611e9581611e80565b8114611ea057600080fd5b50565b600081519050611eb281611e8c565b92915050565b600060208284031215611ece57611ecd611a19565b5b6000611edc84828501611ea3565b91505092915050565b7f546f6b656e206973206e6f7420696e2074686520706f6f6c0000000000000000600082015250565b6000611f1b601883611c90565b9150611f2682611ee5565b602082019050919050565b60006020820190508181036000830152611f4a81611f0e565b9050919050565b7f546f6b656e732073686f756c6420626520646966666572656e74210000000000600082015250565b6000611f87601b83611c90565b9150611f9282611f51565b602082019050919050565b60006020820190508181036000830152611fb681611f7a565b9050919050565b7f416d6f756e742063616e6e6f74206265207a65726f2100000000000000000000600082015250565b6000611ff3601683611c90565b9150611ffe82611fbd565b602082019050919050565b6000602082019050818103600083015261202281611fe6565b9050919050565b6000612034826119e5565b915061203f836119e5565b925082820261204d816119e5565b9150828204841483151761206457612063611de5565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006120a5826119e5565b91506120b0836119e5565b9250826120c0576120bf61206b565b5b828204905092915050565b7f4571756976616c656e742076616c7565206f6620746f6b656e73206e6f74207060008201527f726f76696465642e2e2e00000000000000000000000000000000000000000000602082015250565b6000612127602a83611c90565b9150612132826120cb565b604082019050919050565b600060208201905081810360008301526121568161211a565b9050919050565b7f41737365742076616c7565206c657373207468616e207468726573686f6c642060008201527f666f7220636f6e747269627574696f6e21000000000000000000000000000000602082015250565b60006121b9603183611c90565b91506121c48261215d565b604082019050919050565b600060208201905081810360008301526121e8816121ac565b9050919050565b60006060820190506122046000830186611e48565b6122116020830185611e48565b61221e60408301846119ef565b949350505050565b6000612231826119e5565b915061223c836119e5565b925082820190508082111561225457612253611de5565b5b92915050565b7f496e73756666696369656e7420706f6f6c2062616c616e636500000000000000600082015250565b6000612290601983611c90565b915061229b8261225a565b602082019050919050565b600060208201905081810360008301526122bf81612283565b9050919050565b7f53686172652073686f756c64206265206c657373207468616e20746f74616c5360008201527f6861726500000000000000000000000000000000000000000000000000000000602082015250565b6000612322602483611c90565b915061232d826122c6565b604082019050919050565b6000602082019050818103600083015261235181612315565b905091905056fea2646970667358221220da26851c212086aecfc019b17bc329a29af20cf77c950ee0673074e808e73b6c64736f6c63430008110033";

type AMMConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AMMConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AMM__factory extends ContractFactory {
  constructor(...args: AMMConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _tokenX: PromiseOrValue<string>,
    _tokenY: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AMM> {
    return super.deploy(_tokenX, _tokenY, overrides || {}) as Promise<AMM>;
  }
  override getDeployTransaction(
    _tokenX: PromiseOrValue<string>,
    _tokenY: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_tokenX, _tokenY, overrides || {});
  }
  override attach(address: string): AMM {
    return super.attach(address) as AMM;
  }
  override connect(signer: Signer): AMM__factory {
    return super.connect(signer) as AMM__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AMMInterface {
    return new utils.Interface(_abi) as AMMInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): AMM {
    return new Contract(address, _abi, signerOrProvider) as AMM;
  }
}
